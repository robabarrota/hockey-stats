{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/Components/top-scorers/top-scorers.component.html","src/app/app.component.html","node_modules/tslib/tslib.es6.js","src/app/Components/top-scorers/top-scorers.component.scss","src/app/Components/top-scorers/top-scorers.component.ts","src/app/Models/PlayerStat.ts","src/app/Models/TeamStat.ts","src/app/Services/player/player.service.ts","src/app/Services/team/team.service.ts","src/app/app-material/app-material.module.ts","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/environments/environment.ts","src/main.ts","fs (ignored)"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<button class=\\\"btn btn-outline-light\\\"(click)=\\\"exportToExcel()\\\">Export</button>\\n<button class=\\\"btn btn-outline-light\\\" type=\\\"button\\\" (click)=\\\"clearAll()\\\">Clear</button>\\n<button class=\\\"btn btn-outline-light\\\" (click)=\\\"getMaxMinData()\\\">Load Statistics</button>\\n<button class=\\\"btn btn-outline-light\\\" (click)=\\\"todaysPlayers()\\\">Load Rosters</button>\\n<button class=\\\"btn btn-outline-light\\\" (click)=\\\"orderPlayers()\\\">Order Players</button>\\n\\n<mat-expansion-panel hideToggle class=\\\"statistics-panel\\\">\\n  <mat-expansion-panel-header>\\n    <mat-panel-title class=\\\"text-light\\\">\\n      Statistics\\n    </mat-panel-title>\\n    <mat-panel-description class=\\\"text-light\\\">\\n      Used for normalization\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <mat-accordion class=\\\"accordion accordion-flush\\\" multi>\\n    <mat-expansion-panel hideToggle class=\\\"sub-statistics-panel\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title class=\\\"text-light\\\">\\n          Top Player Stats\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <div class=\\\"text-light\\\">\\n        <div>Goals: {{ topPlayerStats.goals }}</div>\\n        <div>Games: {{ topPlayerStats.games }}</div>\\n        <div>PowerPlay Goals: {{ topPlayerStats.powerPlayGoals }}</div>\\n        <div>Goals Per Game: {{ topPlayerStats.goalsPerGame }}</div>\\n      </div>\\n    </mat-expansion-panel>\\n    <mat-expansion-panel hideToggle class=\\\"sub-statistics-panel\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title class=\\\"text-light\\\">\\n          Worst Player Stats\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <div class=\\\"text-light\\\">\\n        <div>Goals: {{ worstPlayerStats.goals }}</div>\\n        <div>Games: {{ worstPlayerStats.games }}</div>\\n        <div>PowerPlay Goals: {{ worstPlayerStats.powerPlayGoals }}</div>\\n        <div>Goals Per Game: {{ worstPlayerStats.goalsPerGame }}</div>\\n      </div>\\n    </mat-expansion-panel>\\n    <mat-expansion-panel hideToggle class=\\\"sub-statistics-panel\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title class=\\\"text-light\\\">\\n          Top Team Stats\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <div class=\\\"text-light\\\">\\n        <div>penaltyKillOpportunities: {{ topTeamStats.penaltyKillFrequency }}</div>\\n        <div>penaltyKillPercentage: {{ topTeamStats.penaltyKillPercentage }}</div>\\n        <div>goalsAgainstPerGame: {{ topTeamStats.goalsAgainstPerGame }}</div>\\n      </div>\\n    </mat-expansion-panel>\\n    <mat-expansion-panel hideToggle class=\\\"sub-statistics-panel\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title class=\\\"text-light\\\">\\n          Worst Team Stats\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <div class=\\\"text-light\\\">\\n        <div>penaltyKillOpportunities: {{ worstTeamStats.penaltyKillFrequency }}</div>\\n        <div>penaltyKillPercentage: {{ worstTeamStats.penaltyKillPercentage }}</div>\\n        <div>goalsAgainstPerGame: {{ worstTeamStats.goalsAgainstPerGame }}</div>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</mat-expansion-panel>\\n\\n<table id=\\\"prediction-data\\\">\\n  <tr>\\n    <th>Overall Ranking</th>\\n    <th>Player</th>\\n    <th>Team</th>\\n    <th>Score</th>\\n    <th>PlayerId</th>\\n  </tr>\\n  <tr *ngFor=\\\"let player of orderedPlayers; let i = index\\\">\\n    <td>{{ i + 1 }}</td>\\n    <td>{{ player.name }}</td>\\n    <td>{{ player.playsFor.name }}</td>\\n    <td>{{ player.goalLikelihoodRank }}</td>\\n    <td>{{ player.id }}</td>\\n  </tr>\\n</table>\"","export default \"<router-outlet></router-outlet>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \".loaded {\\n  background-color: green;\\n}\\n\\n.btn {\\n  margin: 3px;\\n}\\n\\n.statistics-panel {\\n  width: 30%;\\n  background-color: #fb776c;\\n}\\n\\n.sub-statistics-panel {\\n  background-color: #fb776c;\\n}\\n\\nth {\\n  font-weight: normal;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2JhYmFycm90YS9EZXNrdG9wL2hvY2tleS1zdGF0cy9zcmMvYXBwL0NvbXBvbmVudHMvdG9wLXNjb3JlcnMvdG9wLXNjb3JlcnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL0NvbXBvbmVudHMvdG9wLXNjb3JlcnMvdG9wLXNjb3JlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtBQ0NKOztBREVBO0VBQ0ksVUFBQTtFQUNBLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvdG9wLXNjb3JlcnMvdG9wLXNjb3JlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcbn1cblxuLmJ0biB7XG4gICAgbWFyZ2luOiAzcHg7XG59XG5cbi5zdGF0aXN0aWNzLXBhbmVsIHtcbiAgICB3aWR0aDogMzAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYjc3NmM7XG59XG5cbi5zdWItc3RhdGlzdGljcy1wYW5lbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzc2Yztcbn1cblxudGgge1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59IiwiLmxvYWRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuXG4uYnRuIHtcbiAgbWFyZ2luOiAzcHg7XG59XG5cbi5zdGF0aXN0aWNzLXBhbmVsIHtcbiAgd2lkdGg6IDMwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzc2Yztcbn1cblxuLnN1Yi1zdGF0aXN0aWNzLXBhbmVsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzc2Yztcbn1cblxudGgge1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Game } from 'src/app/Models/Game';\nimport { Player } from 'src/app/Models/Player';\nimport { Roster } from 'src/app/Models/Roster';\nimport { PlayerStat } from 'src/app/Models/PlayerStat';\nimport { Team } from 'src/app/Models/Team';\nimport { WeightedStats } from 'src/app/Models/WeightedStats';\nimport { PlayerService } from 'src/app/Services/player/player.service';\nimport { TeamService } from 'src/app/Services/team/team.service';\nimport weightedStatsJson from '../../../assets/weightedStats.json';\nimport * as XLSX from 'xlsx'; \nimport { formatDate } from '@angular/common';\nimport { TeamStat } from 'src/app/Models/TeamStat';\n\n@Component({\n  selector: 'app-top-scorers',\n  templateUrl: './top-scorers.component.html',\n  styleUrls: ['./top-scorers.component.scss']\n})\nexport class TopScorersComponent implements OnInit {\n  loadingStatistics = true;\n  loadingRosters = true;\n  orderedPlayers: Player[] = [];\n  teams: Team[] = [];\n  rosters: Roster[];\n  weightedStats: WeightedStats;\n  maxPlayerRank: number = 750;\n  maxTeamRank: number = 31;\n  minRank: number = 1;\n  games: Game[] = [];\n  topPlayerStats: PlayerStat = new PlayerStat();\n  worstPlayerStats: PlayerStat = new PlayerStat();\n  topTeamStats: TeamStat = new TeamStat();\n  worstTeamStats: TeamStat = new TeamStat();\n\n  constructor(private playerService: PlayerService, private teamService: TeamService) { }\n\n  ngOnInit() {\n    this.weightedStats = weightedStatsJson;\n    this.worstTeamStats = {\n      penaltyKillFrequency: 0,\n      penaltyKillPercentage: 0,\n      goalsAgainstPerGame: 0,\n      gamesPlayed: 0\n    };\n    this.topTeamStats = {\n      penaltyKillFrequency: 99999,\n      penaltyKillPercentage: 99999,\n      goalsAgainstPerGame: 99999,\n      gamesPlayed: 99999\n    };\n    this.topPlayerStats = {\n      goals: 0,\n      games: 0,\n      powerPlayGoals: 0,\n      goalsPerGame: 0\n    };\n    this.worstPlayerStats = {\n      goals: 99999,\n      games: 99999,\n      powerPlayGoals: 99999,\n      goalsPerGame: 99999\n    };\n  }\n\n  todaysPlayers() {\n    this.getRosters();\n  }\n  \n  getRosters() {\n    this.clearAll();\n    var schedule: any;\n    this.teamService.playingTeams().subscribe((scheduleObs: any) => schedule = scheduleObs, () => {}, () => {\n      this.loadTodaysTeams(schedule.dates[0].games);\n      this.loadTeamStatsAndRankings();\n      this.loadRosters();\n    });\n  }\n\n  loadTodaysTeams(games) {\n    var teams: Team[] = [];\n    games.forEach(game => {\n      var homeTeam : Team = {\n        id: game.teams.home.team.id,\n        name: game.teams.home.team.name,\n        rankings: null,\n        stats: null\n      };\n      var awayTeam : Team = {\n        id: game.teams.away.team.id,\n        name:  game.teams.away.team.name,\n        rankings: null,\n        stats: null\n      };\n      teams.push(homeTeam);\n      teams.push(awayTeam);\n      var newGame : Game = {\n        homeTeam: homeTeam,\n        awayTeam: awayTeam\n      };\n      this.games.push(newGame);\n    }); \n    this.teams = teams;\n  }\n\n  loadRosters() {\n    var teamIds: number[] = [];\n    this.teams.forEach(function (team) {\n      teamIds.push(team.id);\n    })\n    var rostersResponse;\n    this.playerService.getRosters(teamIds).subscribe((rostersObs: any) => rostersResponse = rostersObs, () => {}, () => {\n      var rosters: Roster[] = [];\n      var teams : any[] = rostersResponse.teams;\n      teams.forEach(team => {\n        var thisGame = this.games.filter((game) => game.homeTeam.id === team.id || game.awayTeam.id === team.id)[0];\n        var opposingTeam : Team = thisGame.homeTeam.id === team.id ? thisGame.awayTeam : thisGame.homeTeam;\n        var roster: Roster = {\n          team: {\n            id: team.id,\n            name: team.name,\n            rankings: null,\n            stats: null\n          },\n          players: []\n        };\n        var teamRoster = team.roster.roster;\n        teamRoster.forEach(rosterSpot => {\n          var playerId = rosterSpot.person.id;\n          var playerName = rosterSpot.person.fullName;\n          var playerSeasonStatsresp, playerPlayoffStatsresp;\n          this.playerService.getPlayerSeasonStats(playerId).subscribe((playerSeasonStatsResponse: any) => playerSeasonStatsresp = playerSeasonStatsResponse, () => {}, () => {\n            var playerSeasonStat: PlayerStat = playerSeasonStatsresp.stats[0].splits.length === 0 ? new PlayerStat() : playerSeasonStatsresp.stats[0].splits[0].stat;\n            this.playerService.getPlayerPlayoffStats(playerId).subscribe((playerPlayoffStatsResponse: any) => playerPlayoffStatsresp = playerPlayoffStatsResponse, () => {}, () => {\n              var playerPlayoffStat: PlayerStat = playerPlayoffStatsresp.stats[0].splits.length === 0 ? new PlayerStat() : playerPlayoffStatsresp.stats[0].splits[0].stat;\n              var player: Player = {\n                id: playerId,\n                name: playerName,\n                seasonStats: playerSeasonStat,\n                //playoffStats: playerPlayoffStat,\n                goalLikelihoodRank: -1,\n                playingAgainst: opposingTeam,\n                playsFor: team\n              };\n              this.calculateGoalLikelihood(player);\n              roster.players.push(player);\n              this.orderedPlayers.push(player);\n            });\n          });\n        });\n        rosters.push(roster);\n      });\n      this.rosters = rosters;\n    });\n  }\n\n  clearAll() {\n    this.teams = [];\n    this.rosters = [];\n    this.orderedPlayers = [];\n  }\n\n  calculateRank() {\n    this.orderedPlayers.forEach(player => {\n      this.calculateGoalLikelihood(player);\n    })\n  }\n  orderPlayers() {\n    //this.orderedPlayers.filter((a) => a.goalLikelihoodRank > 0);\n    this.orderedPlayers.sort((a,b) => b.goalLikelihoodRank - a.goalLikelihoodRank);\n  }\n\n  getGoalsPerGame(stats: PlayerStat): number {\n    return stats.games === 0 ? 0 : stats.goals / stats.games;\n  }\n\n  calculateGoalLikelihood(player: Player) {\n    var playerSeasonStatsResp, playerPlayoffStatsResp;\n    \n    this.playerService.getPlayerSeasonStats(player.id).subscribe((playerSeasonStatsResponse: any) => playerSeasonStatsResp = playerSeasonStatsResponse, () => {}, () => {\n      this.playerService.getPlayerPlayoffStats(player.id).subscribe((playerPlayoffStatsResponse: any) => playerPlayoffStatsResp = playerPlayoffStatsResponse, () => {}, () => {\n        console.log(\"here\");\n        // if (playerSeasonStatsResp.stats[0].splits[0] !== undefined && playerPlayoffStatsResp.stats[0].splits[0] !== undefined) {\n        if (playerSeasonStatsResp.stats[0].splits[0] !== undefined) {\n          console.log(\"there\");\n          var playerSeasonStats = playerSeasonStatsResp.stats[0].splits[0].stat;\n          //var playerPlayoffStats = playerPlayoffStatsResp.stats[0].splits[0].stat;\n          // var playerTotalGoals = playerSeasonStats.goals || 0 + playerPlayoffStats.goals || 0 ;\n          // var playerTotalGames = playerSeasonStats.games || 0  + playerPlayoffStats.games || 0 ;\n          // var playerTotalPPG = playerSeasonStats.powerPlayGoals || 0  + playerPlayoffStats.powerPlayGoals || 0 ;\n\n          var playerTotalGoals = playerSeasonStats.goals || 0;\n          var playerTotalGames = playerSeasonStats.games || 0;\n          var playerTotalPPG = playerSeasonStats.powerPlayGoals || 0;\n          console.log(playerTotalGoals);\n          player.goalLikelihoodRank = this.getGoalsPerGameScore(playerTotalGoals, playerTotalGames)\n                                //+ this.getGeneralPlayerRank(playerStats.rankShots) *  this.getGeneralPlayerRank(playerStats.rankShotPct) * this.weightedStats.shotPercentageWeight\n                                \n                                + this.getOpposingGoalsAgainstScore(this.teams.find(team => team.id === player.playingAgainst.id).stats.goalsAgainstPerGame)\n                                + this.getPowerPlayScore(this.teams.find(team => team.id === player.playingAgainst.id).rankings.penaltyKillOpportunities, this.teams.find(team => team.id === player.playingAgainst.id).stats.penaltyKillPercentage, this.teams.find(team => team.id === player.playingAgainst.id).stats.gamesPlayed, playerTotalPPG, playerTotalGames)\n                                ;\n        }\n        else {\n          player.goalLikelihoodRank = -1;\n        }\n      });\n    });\n    \n  }\n\n  rankingStringToNumber(rank: string): number {\n    return rank ? Number(rank.slice(0, -2)) : 800;\n  }\n\n  getGeneralPlayerRank(rank: string): number {\n    var rankValue = this.rankingStringToNumber(rank);\n    var normalizedRankScore = this.normalizePlayerRankValue(rankValue);\n    return normalizedRankScore;\n  }\n\n  getOpposingGoalsAgainstScore(gaa: number): number {\n    var normalizedGAAScore = this.normalizeTeamStatValue(gaa, this.topTeamStats.goalsAgainstPerGame, this.worstTeamStats.goalsAgainstPerGame) * this.weightedStats.opposingGAAWeight;\n    return normalizedGAAScore;\n  }\n\n  normalizePlayerRankValue(rankValue: number): number {\n    var normalizedRankScore = (rankValue - this.minRank) / (this.maxPlayerRank - this.minRank);\n    return !isNaN(normalizedRankScore) ? normalizedRankScore : 1;\n  }\n  normalizeTeamRankValue(rankValue: number): number {\n    var normalizedRankScore = (rankValue - this.minRank) / (this.maxTeamRank - this.minRank);\n    return !isNaN(normalizedRankScore) ? normalizedRankScore : 1;\n  }\n  normalizePlayerStatValue(playerStat: number, min: number, max: number) {\n    var normalizedScore = (playerStat - min) / (max - min);\n    return !isNaN(normalizedScore) ? normalizedScore : 1;\n  }\n  normalizeTeamStatValue(teamStat: number, min: number, max: number) {\n    var normalizedScore = (teamStat - min) / (max - min);\n    return !isNaN(normalizedScore) ? normalizedScore : 1;\n  }\n\n  getGoalsPerGameScore(goals: number, games: number): number {\n    if (goals === undefined || games === 0) {\n      return 0;\n    }\n    var goalsPerGameValue = this.normalizePlayerStatValue(goals / games, this.worstPlayerStats.goalsPerGame, this.topPlayerStats.goalsPerGame);\n    var gamesValue = Math.log(games) / Math.log(this.topPlayerStats.games * 100);\n    var goalsPerGameScore = (goalsPerGameValue + gamesValue) * this.weightedStats.goalsPerGameWeight;\n\n    // var goalsValue = this.normalizePlayerStatValue(goals, this.worstPlayerStats.goals, this.topPlayerStats.goals);\n    // var gamesValue = this.normalizePlayerStatValue(games, this.worstPlayerStats.games, this.topPlayerStats.games) + 1;\n\n    // var gamesMultiplier = 1 + Math.log(games) / Math.log(this.topPlayerStats.games * 1000000);\n    // var goalsPerGameScore = (goalsValue * this.weightedStats.numberOfGoalsWeight) / (gamesValue * this.weightedStats.numberOfGamesWeight) + gamesMultiplier;\n    return goalsPerGameScore;\n  }\n\n  getPowerPlayScore(pkOps: string, pkPerc: number, teamGames: number, ppGoals: number, playerGames: number) {\n    if (ppGoals === undefined) {\n      return 0;\n    }\n    var opposingPKOpsRankValue = this.normalizeTeamRankValue(this.rankingStringToNumber(pkOps));\n    var opposingPKPercStatValue = 1- this.normalizeTeamStatValue(pkPerc, this.topTeamStats.penaltyKillPercentage, this.worstTeamStats.penaltyKillPercentage);\n    var playerPPStatValue = this.normalizePlayerStatValue(ppGoals, this.worstPlayerStats.powerPlayGoals, this.topPlayerStats.powerPlayGoals);\n    var teamGamesValue = this.normalizePlayerStatValue(teamGames, this.topTeamStats.gamesPlayed, this.worstTeamStats.gamesPlayed) * this.weightedStats.numberOfGamesWeight + 1;\n    var playerGamesValue = this.normalizePlayerStatValue(playerGames, this.worstPlayerStats.games, this.topPlayerStats.games) * this.weightedStats.numberOfGamesWeight + 1;\n\n    var powerPlayOppRank = (playerPPStatValue * opposingPKOpsRankValue * opposingPKPercStatValue * this.weightedStats.powerPlayGoalsWeight) / (teamGamesValue * playerGamesValue * this.weightedStats.numberOfGamesWeight);\n\n    return powerPlayOppRank;\n  }\n\n  loadTeamStatsAndRankings() {\n    this.teams.forEach(team => {\n      var teamStatsResp;\n      this.teamService.getTeamStats(team.id).subscribe((teamStatsObs: any) => teamStatsResp = teamStatsObs, () => {}, () => { \n        var teamRankings = teamStatsResp.stats[1].splits[0].stat;\n        var teamStats = teamStatsResp.stats[0].splits[0].stat;\n        team.rankings = teamRankings;\n        team.stats = teamStats;\n      });\n    });\n\n  }\n\n\n  //----------------------------------------------------\n\n  loadGames() {\n    var schedule: any;\n    this.teamService.playingTeams().subscribe((scheduleObs: any) => schedule = scheduleObs, () => {}, () => {\n      this.loadTodaysTeams(schedule.dates[0].games);\n      this.loadRosters();\n    });\n  }\n\n  exportToExcel() {\n    var fileName= \"TimsPredictionsExcelSheet\" + formatDate(new Date(), 'dd-MM-yyyy', 'en') + \".xlsx\";  \n    /* table id is passed over here */   \n    let element = document.getElementById('prediction-data'); \n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n    /* generate workbook and add the worksheet */\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    /* save to file */\n    XLSX.writeFile(wb, fileName);\n  }\n\n  getMaxMinData() {\n    var allTeamsResp;\n    this.teamService.getAllTeams().subscribe((allTeamsObs: any) => allTeamsResp = allTeamsObs, () => {}, () => {\n      var allTeamsObjs = allTeamsResp.teams;\n\n      var teamIds = allTeamsObjs.map(team => team.id);\n        var rostersResponse;\n        this.playerService.getRosters(teamIds).subscribe((rostersObs: any) => rostersResponse = rostersObs, () => {}, () => { \n          var teams : any[] = rostersResponse.teams;\n          teams.forEach(team => {\n            var teamRoster = team.roster.roster;\n            teamRoster.forEach(rosterSpot => {\n              var playerId = rosterSpot.person.id;\n              var playerSeasonStatsresp, playerPlayoffStatsresp;\n              this.playerService.getPlayerSeasonStats(playerId).subscribe((playerSeasonStatsResponse: any) => playerSeasonStatsresp = playerSeasonStatsResponse, () => {}, () => {\n                this.playerService.getPlayerPlayoffStats(playerId).subscribe((playerPlayoffStatsResponse: any) => playerPlayoffStatsresp = playerPlayoffStatsResponse, () => {}, () => {\n                  var playerSeasonStat: PlayerStat = playerSeasonStatsresp.stats[0].splits.length === 0 ? new PlayerStat() : playerSeasonStatsresp.stats[0].splits[0].stat;\n                  var playerPlayoffStat: PlayerStat = playerPlayoffStatsresp.stats[0].splits.length === 0 ? new PlayerStat() : playerPlayoffStatsresp.stats[0].splits[0].stat;\n\n                  // var goals = playerSeasonStat.goals + playerPlayoffStat.games == undefined ? playerPlayoffStat.games : 0;\n                  // var games = playerSeasonStat.games + playerPlayoffStat.games ? playerPlayoffStat.games : 0;\n                  // var powerPlayGoals = playerSeasonStat.powerPlayGoals + playerPlayoffStat.powerPlayGoals ? playerPlayoffStat.powerPlayGoals : 0;\n                  var goals = playerSeasonStat.goals;\n                  var games = playerSeasonStat.games;\n                  var powerPlayGoals = playerSeasonStat.powerPlayGoals;\n \n                  var goalsPerGame = goals/games;\n                  if (goals > this.topPlayerStats.goals) {\n                    this.topPlayerStats.goals = goals;\n                  } else if (goals < this.worstPlayerStats.goals) {\n                    this.worstPlayerStats.goals = goals;\n                  }\n\n                  if (games > this.topPlayerStats.games) {\n                    this.topPlayerStats.games = games;\n                  } else if (games < this.worstPlayerStats.games) {\n                    this.worstPlayerStats.games = games;\n                  }\n\n                  if (powerPlayGoals > this.topPlayerStats.powerPlayGoals) {\n                    this.topPlayerStats.powerPlayGoals = powerPlayGoals;\n                  } else if (powerPlayGoals < this.worstPlayerStats.powerPlayGoals) {\n                    this.worstPlayerStats.powerPlayGoals = powerPlayGoals;\n                  }\n\n                  if (goalsPerGame > this.topPlayerStats.goalsPerGame) {\n                    this.topPlayerStats.goalsPerGame = goalsPerGame;\n                  } else if (goalsPerGame < this.worstPlayerStats.goalsPerGame) {\n                    this.worstPlayerStats.goalsPerGame = goalsPerGame;\n                  }\n                });\n              });\n            });\n          });\n        });\n\n\n      allTeamsObjs.forEach(teamObj => {\n        var pkopsRank : string = teamObj.teamStats[0].splits[1].stat.penaltyKillOpportunities;\n        var pkperc : number  = teamObj.teamStats[0].splits[0].stat.penaltyKillPercentage;\n        var gaa : number  = teamObj.teamStats[0].splits[0].stat.goalsAgainstPerGame;\n        var gamesPlayed: number = teamObj.teamStats[0].splits[0].stat.gamesPlayed;\n        var pkfreq = this.rankingStringToNumber(pkopsRank) / gamesPlayed;\n        if (pkfreq < this.topTeamStats.penaltyKillFrequency) {\n          this.topTeamStats.penaltyKillFrequency = pkfreq;\n        } else if (pkfreq > this.worstTeamStats.penaltyKillFrequency) {\n          this.worstTeamStats.penaltyKillFrequency = pkfreq;\n        }\n\n        if (pkperc < this.topTeamStats.penaltyKillPercentage) {\n          this.topTeamStats.penaltyKillPercentage = pkperc\n        } else if (pkperc > this.worstTeamStats.penaltyKillPercentage) {\n          this.worstTeamStats.penaltyKillPercentage = pkperc\n        }\n\n        if (gaa < this.topTeamStats.goalsAgainstPerGame) {\n          this.topTeamStats.goalsAgainstPerGame = gaa\n        } else if (gaa > this.worstTeamStats.goalsAgainstPerGame) {\n          this.worstTeamStats.goalsAgainstPerGame = gaa\n        }\n\n        if (gamesPlayed < this.topTeamStats.gamesPlayed) {\n          this.topTeamStats.gamesPlayed = gamesPlayed\n        } else if (gamesPlayed > this.worstTeamStats.gamesPlayed) {\n          this.worstTeamStats.gamesPlayed = gamesPlayed\n        }\n      });\n      this.loadingStatistics = false;\n    });\n  }\n}\n","export class PlayerStat {\n    goals: number;\n    games: number;\n    powerPlayGoals: number;\n    goalsPerGame: number;\n}","export class TeamStat {\n    penaltyKillFrequency: number;\n    penaltyKillPercentage: number;\n    goalsAgainstPerGame: number;\n    gamesPlayed: number;\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Player } from 'src/app/Models/Player';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport appsettingsJson from '../../../assets/appsettings.json';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  baseApiUrl: string;\n  apiVersion: string;\n\n  constructor(private http: HttpClient) { \n    this.baseApiUrl = appsettingsJson.apiBaseUrl;\n    this.apiVersion = appsettingsJson.apiVersion;\n  }\n\n  getRosters(teamIds: number[]) : Observable<any> {\n    var requestUrl = this.baseApiUrl + this.apiVersion + \"teams/?teamId=\" + teamIds.join(\",\") + \"&expand=team.roster\";\n    var result = this.http.get(requestUrl);\n    return result;\n  }\n\n  getPlayerSeasonStats(playerId: number) : Observable<any> {\n    var requestUrl = this.baseApiUrl + this.apiVersion + \"people/\" + playerId + \"/stats?stats=statsSingleSeason&season=20212022\";\n    var result = this.http.get(requestUrl);\n    return result;\n  }\n\n  getPlayerPlayoffStats(playerId: number) : Observable<any> {\n    var requestUrl = this.baseApiUrl + this.apiVersion + \"people/\" + playerId + \"/stats?stats=statsSingleSeasonPlayoffs&season=20212022\";\n    var result = this.http.get(requestUrl);\n    return result;\n  }\n\n  getPlayerRankings(playerId: number): Observable<any> {\n    var requestUrl = this.baseApiUrl + this.apiVersion + \"people/\" + playerId + \"/stats?stats=regularSeasonStatRankings&season=20212022\";\n    var result = this.http.get(requestUrl);\n    return result;\n  }\n}\n","import { formatDate } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Team } from 'src/app/Models/Team';\nimport appsettingsJson from '../../../assets/appsettings.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n  baseApiUrl: string;\n  apiVersion: string;\n\n  constructor(private http: HttpClient) { \n    this.baseApiUrl = appsettingsJson.apiBaseUrl;\n    this.apiVersion = appsettingsJson.apiVersion;\n  }\n\n  playingTeams() : Observable<any> {\n    //https://statsapi.web.nhl.com/api/v1/schedule\n    var todaysDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n    var requestUrl = this.baseApiUrl + this.apiVersion + \"schedule?startDate=\" + todaysDate + \"&endDate=\" + todaysDate;\n    var result = this.http.get(requestUrl);\n    return result;\n  }\n\n  getTeamStats(teamId: number) : Observable<any> {\n    var requestUrl = this.baseApiUrl + this.apiVersion + \"teams/\" + teamId + \"/stats\";\n    var result = this.http.get(requestUrl);\n    return result;\n  }\n\n  getAllTeams() : Observable<any> {\n    \"https://statsapi.web.nhl.com/api/v1/teams?expand=team.stats\"\n    var requestUrl = this.baseApiUrl + this.apiVersion + \"teams?expand=team.stats\";\n    var result = this.http.get(requestUrl);\n    return result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatExpansionModule } from '@angular/material';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatExpansionModule,\n    CommonModule\n  ],\n  exports: [MatExpansionModule]\n})\nexport class AppMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TopScorersComponent } from './Components/top-scorers/top-scorers.component';\n\n\nconst routes: Routes = [\n  {\n    path:'TopScorers',\n    component: TopScorersComponent\n  },\n  { path: '**',\n    redirectTo: 'TopScorers'\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    // onSameUrlNavigation: 'ignore',\n    onSameUrlNavigation: 'reload'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'hockey-stats';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopScorersComponent } from './Components/top-scorers/top-scorers.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppMaterialModule } from './app-material/app-material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopScorersComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AppMaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///","file":"main-es5.js"}